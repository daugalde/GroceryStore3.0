<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>